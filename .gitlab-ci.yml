# Official Python Image
image: python:3.11.6-bullseye

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
  PRE_COMMIT_HOME: "${CI_PROJECT_DIR}/.cache/pre-commit"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - ${PRE_COMMIT_HOME}
    - ${PIP_CACHE_DIR}

# Set execution order: first run jobs on 'test' stage on parallel
# then run jobs on 'report' stage
stages:
  - test
  - build
  - deploy

before_script:
  # Git for 3rd party source packages
  # - sudo apt-get update && sudo apt-get install -y --no-install-recommends git
  - git --version

  ## Install ssh-agent if not already installed, it is required by Docker.
  - "command -v ssh-agent >/dev/null || ( sudo apt-get update -y && sudo apt-get install openssh-client -y )"

  ## Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  ## Create the SSH directory and give it the right permissions
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  ## Assuming you created the SSH_KNOWN_HOSTS variable, uncomment the
  ## following two lines.
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

  # Check Python version
  - python -V
  - python3 -V
  - whereis python

lint_tests:
  tags:
    - docker
  stage: test
  script:
    # Install pre-commit
    - pip install --upgrade pip
    - pip install pipx
    - pipx ensurepath
    - pipx install pre-commit==3.6.0
    # lint test
    - pipx run -- pre-commit run --a

unit_tests:
  tags:
    - docker
  stage: test
  script:
    - apt update
    # LDAP client dependencies
    - apt-get install -y --no-install-recommends libsasl2-dev libldap2-dev libssl-dev
    # build
    - cd backend
    - export VIRTUAL_ENV=$(pwd)
    - make build-dev
    - make coverage
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
  artifacts:
    paths:
      - parts/test/htmlreport

build_image:
  tags:
    - shell
  stage: build
  script:
    # build docker
    # https://stackoverflow.com/questions/76654491/invalid-tag-missing-manifest-digest-when-exporting-nx-docker-image-to-gitlab-do
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin git.starzel.de:5050
    - cd backend
    # On the shell-runner we only have 3.7 and don't need anything newer for now.
    - sed -i'' -e 's/PYTHON_VERSION_MIN=3\.11/PYTHON_VERSION_MIN=3.7/g' Makefile
    - make build-image-ci
  rules:
    - if: '$CI_COMMIT_BRANCH == "python3"'
    - if: '$NIGHTLY_UPDATE == "True"'

deploy_review:
  tags:
    - shell
  stage: deploy
  script:
    - curl --data-urlencode "" https://rundeck.portknox.info/api/16/job/18b65c46-4159-43ea-9989-7dc433fbccb0/run?authtoken=$authtoken
  rules:
    - if: '$CI_COMMIT_BRANCH == "python3"'
    - if: '$NIGHTLY_UPDATE == "True"'
