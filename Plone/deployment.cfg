# Deployment buildout
# ===================

[buildout]
parts =
    zeo
    instance1
    instance2
    instance3
    supervisor
    productdistros
#    maildrophost
    plonebackup
    elan-logrotate.conf
    i18ndude
    i18nize_esd
    i18nize_policy
    i18nize_dbaccess
    i18nize_irix
    i18nize_folders   
    ${buildout:varnish-parts}

#eggs-directory = eggs
#download-cache= downloads
    
extends =
    buildout.cfg
    buildout.d/varnish.cfg

# If you release internal eggs to an internal server, you should reference
# a page that lists all those eggs here. The easiest way is to allow scp
# access to a directory that's served by nginx or Apache and enable automatic
# directory indexing/listing of that directory. Then use ./bin/mkrelease to
# release your internal eggs here, and add to the [versions] block in
# versions.cfg.
 
# find-links = http://my-internal-server/eggs

[hosts]
instance1  = 127.0.0.1
instance2  = 127.0.0.1
instance3  = 127.0.0.1
supervisor = 127.0.0.1 
zeo_host   = 127.0.0.1
# The hostname/address that Varnish binds to
varnish         = 127.0.0.1
# The hosts that are allowed to issue PURGE reuqests to Varnish
allow-purge     = 127.0.0.1
# The IP address that Varnish proxies to (do not use a hostname)
varnish-backend = 127.0.0.1

[ports]
instance1  = 8081
instance2  = 8082
instance3  = 8083
supervisor = 9001
zeo_port   = 8881
varnish         = 8100
varnish-backend = ${:instance1}

[users]
zope-admin       = admin
supervisor-admin = admin
zope-process     = zope

[passwords]
zope-admin       = istrator
supervisor-admin = istrator


[zeo]
recipe = plone.recipe.zeoserver
zeo-address = ${hosts:zeo_host}:${ports:zeo_port}
eggs =
    plone.recipe.zeoserver

# Zope instance template
[instance]
recipe = plone.recipe.zope2instance
user = ${users:zope-admin}:${passwords:zope-admin}
debug-mode = off
verbose-security = off
effective-user = ${users:zope-process}
http-fast-listen = off
zserver-threads = 4
zodb-cache-size = 10000
zeo-client = true
zeo-address = ${zeo:zeo-address}
zeo-client-cache-size = 256MB
shared-blob = on
environment-vars =    
    zope_i18n_compile_mo_files true
eggs =
    ${eggs:main}
    plone.reload

[instance1]
<= instance
http-address = ${ports:instance1}

[instance2]
<= instance
http-address = ${ports:instance2}

[instance3]
<= instance
http-address = ${ports:instance3}
verbose-security = on
debug-mode = on
zserver-threads = 2

[productdistros]
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages =

[maildrophost]
target = ${productdistros:location}
recipe=infrae.maildrophost
version=1.22
smtp_host=localhost
smtp_port=25
poll_interval=119
wait_interval=1
batch = 50
tls = 0


# Install supervisor, which runs on port 9001
# Run: ``bin/supervisord``
# Run: ``bin/supervisorctl --help``
[supervisor]
recipe = collective.recipe.supervisor
port = ${ports:supervisor}
user = ${users:supervisor-admin}
password = ${passwords:supervisor-admin}
serverurl = http://${hosts:supervisor}:${ports:supervisor}
programs =
    10 zeo ${zeo:location}/bin/runzeo ${zeo:location}
    10 instance1  ${buildout:directory}/bin/instance1 [console] true ${users:zope-process}
    10 instance2  ${buildout:directory}/bin/instance2 [console] true ${users:zope-process}
    30 varnish    ${varnish-build:location}/sbin/varnishd [-F -s ${varnish-options:storage} -f ${buildout:directory}/etc/varnish.vcl -a ${hosts:varnish}:${ports:varnish} ${varnish-options:tuning}] true ${users:varnish}

[elan-logrotate.conf]
recipe = zc.recipe.deployment:configuration
text = 

    rotate 31
    daily
    create
    compress
    delaycompress

    ${buildout:directory}/var/log/instance1*.log {
        sharedscripts
        postrotate
            /bin/kill -USR2 $(cat ${buildout:directory}/var/instance1.pid)
        endscript
    }
    
    ${buildout:directory}/var/log/instance2*.log {
        sharedscripts
        postrotate
            /bin/kill -USR2 $(cat ${buildout:directory}/var/instance2.pid)
        endscript
    }
    
    ${buildout:directory}/var/log/zeo.log {
        postrotate
            /bin/kill -USR2 $(cat ${buildout:directory}/var/zeo.pid)
        endscript
    }
    
[plonebackup]
recipe = collective.recipe.backup
use_rsync = False
keep = 5
backup_blobs = True
blob_storage = ${buildout:directory}/var/blobstorage
pre_command = echo 'Starting ELAN-Backup!'
post_command = echo 'ELAN-Backup done!'    
