<html xmlns:tal="http://xml.zope.org/namespaces/tal" 
     xmlns:metal="http://xml.zope.org/namespaces/metal"
     xmlns:i18n="http://xml.zope.org/namespaces/i18n" 
     i18n:domain="docpool.doksys">
    <body>


    <metal:macro define-macro="doksys_meta" i18n:domain="docpool.doksys">
    Network Operator:
        <span tal:condition="python:hasattr(doksysobj,'NetworkOperator')">
           <tal:var replace="doksysobj/NetworkOperator"/>
        </span><br>

        Dom:
        <span tal:condition="python:hasattr(doksysobj,'Dom')">
           <tal:var replace="doksysobj/Dom"/>
        </span><br>

        Legal Base:
        <span tal:condition="python:hasattr(doksysobj,'LegalBase')">
           <tal:var replace="doksysobj/LegalBase"/>
        </span><br>

        Measuring Program:
        <span tal:condition="python:hasattr(doksysobj,'MeasuringProgram')">
           <tal:var replace="doksysobj/MeasuringProgram"/>
        </span><br>

        Sampling Begin:
        <span tal:condition="python:hasattr(doksysobj,'SamplingBegin')">
           <tal:var replace="doksysobj/SamplingBegin"/>
        </span><br>

        Sampling End:
        <span tal:condition="python:hasattr(doksysobj,'SamplingEnd')">
           <tal:var replace="doksysobj/SamplingEnd"/>
        </span><br>

        Purpose:
        <span tal:condition="python:hasattr(doksysobj,'Purpose')">
           <tal:var replace="doksysobj/Purpose"/>
        </span><br>

        Start Location:
        <span tal:condition="python:hasattr(doksysobj,'TrajectoryStartLocation')">
           <tal:var replace="doksysobj/TrajectoryStartLocation"/>
        </span><br>

        End Location:
        <span tal:condition="python:hasattr(doksysobj,'TrajectoryEndLocation')">
           <tal:var replace="doksysobj/TrajectoryEndLocation"/>
        </span><br>

        Start Time:
        <span tal:condition="python:hasattr(doksysobj,'TrajectoryStartTime')">
           <tal:var replace="doksysobj/TrajectoryStartTime"/>
        </span><br>

        End Time:
        <span tal:condition="python:hasattr(doksysobj,'TrajectoryEndTime')">
           <tal:var replace="doksysobj/TrajectoryEndTime"/>
        </span><br>

        Status:
        <span tal:condition="python:hasattr(doksysobj,'Status')">
           <tal:var replace="doksysobj/Status"/>
        </span><br>

        Operation Mode:
        <span tal:condition="python:hasattr(doksysobj,'OperationMode')">
           <tal:var replace="doksysobj/OperationMode"/>
        </span><br>

        Data Type:
        <span tal:condition="python:hasattr(doksysobj,'DataType')">
           <tal:var replace="doksysobj/DataType"/>
        </span><br>

        Sample Type Id:
        <span tal:condition="python:hasattr(doksysobj,'SampleTypeId')">
           <tal:var replace="doksysobj/SampleTypeId"/>
        </span><br>

        Sample Type:
        <span tal:condition="python:hasattr(doksysobj,'SampleType')">
           <tal:var replace="doksysobj/SampleType"/>
        </span><br>

        Measurement Category:
        <span tal:condition="python:hasattr(doksysobj,'MeasurementCategory')">
           <tal:var replace="doksysobj/MeasurementCategory"/>
        </span><br>

        Duration:
        <span tal:condition="python:hasattr(doksysobj,'Duration')">
           <tal:var replace="doksysobj/Duration"/>
        </span><br>

        InfoType:
        <span tal:condition="python:hasattr(doksysobj,'InfoType')">
           <tal:var replace="doksysobj/InfoType"/>
        </span><br>

        Area:
        <span tal:condition="python:hasattr(doksysobj,'Area')">
           <tal:var replace="doksysobj/Area"/>
        </span><br>

    </metal:macro>

    <metal:macro define-macro="doksys_actions" i18n:domain="docpool.doksys">
    </metal:macro>


    </body>
</html>
