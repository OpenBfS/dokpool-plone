<registry>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.cacheStopRequestVariables" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="cacheStopRequestVariables">
    <field type="plone.registry.field.Tuple">
      <default>
        <element>statusmessages</element>
        <element>SearchableText</element>
      </default>
      <description>Variables in the request that prevent caching if present</description>
      <title>Request variables that prevent caching</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title>Request variables</title>
      </value_type>
    </field>
    <value>
      <element>statusmessages</element>
      <element>SearchableText</element>
    </value>
  </record>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.contentTypeRulesetMapping" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="contentTypeRulesetMapping">
    <field type="plone.registry.field.Dict">
      <description>Maps content type names to ruleset names</description>
      <key_type type="plone.registry.field.ASCIILine">
        <title>Content type name</title>
      </key_type>
      <title>Content type/ruleset mapping</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Ruleset name</title>
      </value_type>
    </field>
    <value>
      <element key="SituationReport">plone.content.folderView</element>
      <element key="DashboardCollection">plone.content.feed</element>
      <element key="DocTypes">plone.content.folderView</element>
      <element key="DPEvent">plone.content.itemView</element>
      <element key="DocType">plone.content.itemView</element>
      <element key="Document">plone.content.itemView</element>
      <element key="SRModule">plone.content.folderView</element>
      <element key="ELANContentConfig">plone.content.folderView</element>
      <element key="Link">plone.content.itemView</element>
      <element key="SimpleFolder">plone.content.folderView</element>
      <element key="ELANCurrentSituation">plone.content.folderView</element>
      <element key="ELANArchives">plone.content.folderView</element>
      <element key="ELANInfos">plone.content.folderView</element>
      <element key="ELANDocCollection">plone.content.feed</element>
      <element key="ELANArchive">plone.content.folderView</element>
      <element key="ELANSection">plone.content.folderView</element>
      <element key="Image">plone.content.file</element>
      <element key="InfoFolder">plone.content.folderView</element>
      <element key="File">plone.content.file</element>
      <element key="SRCollection">plone.content.feed</element>
      <element key="DPDocument">plone.content.folderView</element>
      <element key="DPEvents">plone.content.folderView</element>
    </value>
  </record>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.enableCompression" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="enableCompression">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description>Determine whether GZip compression should be enabled for standard responses</description>
      <title>Enable GZip compression</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.purgedContentTypes" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="purgedContentTypes">
    <field type="plone.registry.field.Tuple">
      <default>
        <element>File</element>
        <element>Image</element>
        <element>News Item</element>
      </default>
      <description>List content types which should be purged when modified</description>
      <title>Content types to purge</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title>Content type name</title>
      </value_type>
    </field>
    <value>
      <element>ELANArchive</element>
      <element>ELANArchives</element>
      <element>ELANInfos</element>
      <element>DPDocument</element>
      <element>DocTypes</element>
      <element>DocType</element>
      <element>ELANDocCollection</element>
      <element>ELANContentConfig</element>
      <element>DPEvent</element>
      <element>ELANSection</element>
      <element>ELANCurrentSituation</element>
      <element>File</element>
      <element>Folder</element>
      <element>InfoDocument</element>
      <element>IRIXConfig</element>
      <element>Image</element>
      <element>InfoFolder</element>
      <element>InfoLink</element>
      <element>Link</element>
      <element>Document</element>
      <element>DPEvents</element>
      <element>SimpleFolder</element>
    </value>
  </record>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.templateRulesetMapping" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="templateRulesetMapping">
    <field type="plone.registry.field.Dict">
      <description>Maps skin layer page template names to ruleset names</description>
      <key_type type="plone.registry.field.ASCIILine">
        <title>Page template name</title>
      </key_type>
      <title>Page template/ruleset mapping</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Ruleset name</title>
      </value_type>
    </field>
    <value>
      <element key="info">plone.content.folderView</element>
      <element key="dview">plone.content.feed</element>
      <element key="accessibility-info">plone.content.itemView</element>
      <element key="image_view_fullscreen">plone.content.itemView</element>
      <element key="image_view">plone.content.itemView</element>
      <element key="search_rss">plone.content.feed</element>
      <element key="file_view">plone.content.itemView</element>
      <element key="listitem">plone.content.folderView</element>
      <element key="inline">plone.content.folderView</element>
      <element key="dashboard">plone.content.folderView</element>
      <element key="sitemap">plone.content.itemView</element>
      <element key="RSS">plone.content.feed</element>
    </value>
  </record>
  <record name="plone.app.caching.moderateCaching.anonOnly">
    <field type="plone.registry.field.Bool">
      <description>Ensure logging users always get a fresh page. Note that if you are caching pages in a proxy cache, you'll still need to use a Vary response header to keep anonymous and authenticated content separate.</description>
      <required>False</required>
      <title>Only cache for anonymous users</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.etags">
    <field type="plone.registry.field.Tuple">
      <description>A list of ETag component names to include</description>
      <required>False</required>
      <title>ETags</title>
      <value_type type="plone.registry.field.ASCIILine"/>
    </field>
    <value>
      <element>roles</element>
      <element>dokpool_apps</element>
      <element>lastModified</element>
      <element>dokpool_cachetime</element>
    </value>
  </record>
  <record name="plone.app.caching.moderateCaching.lastModified">
    <field type="plone.registry.field.Bool">
      <description>Turn on Last-Modified headers</description>
      <required>False</required>
      <title>Last-modified validation</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.ramCache">
    <field type="plone.registry.field.Bool">
      <description>Turn on caching in Zope memory</description>
      <required>False</required>
      <title>RAM cache</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.caching.moderateCaching.smaxage">
    <field type="plone.registry.field.Int">
      <description>Time (in seconds) to cache the response in the caching proxy</description>
      <required>False</required>
      <title>Shared maximum age</title>
    </field>
    <value>86400</value>
  </record>
  <record name="plone.app.caching.moderateCaching.vary">
    <field type="plone.registry.field.ASCIILine">
      <description>Name(s) of HTTP headers that must match for the caching proxy to return a cached response</description>
      <required>False</required>
      <title>Vary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.anonOnly">
    <field type="plone.registry.field.Bool">
      <description>Ensure logging users always get a fresh page. Note that if you are caching pages in a proxy cache, you'll still need to use a Vary response header to keep anonymous and authenticated content separate.</description>
      <required>False</required>
      <title>Only cache for anonymous users</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.etags">
    <field type="plone.registry.field.Tuple">
      <description>A list of ETag component names to include</description>
      <required>False</required>
      <title>ETags</title>
      <value_type type="plone.registry.field.ASCIILine"/>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.lastModified">
    <field type="plone.registry.field.Bool">
      <description>Turn on Last-Modified headers</description>
      <required>False</required>
      <title>Last-modified validation</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.maxage">
    <field type="plone.registry.field.Int">
      <description>Time (in seconds) to cache the response in the browser or caching proxy</description>
      <required>False</required>
      <title>Maximum age</title>
    </field>
    <value>86400</value>
  </record>
  <record name="plone.app.caching.strongCaching.ramCache">
    <field type="plone.registry.field.Bool">
      <description>Turn on caching in Zope memory</description>
      <required>False</required>
      <title>RAM cache</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.smaxage">
    <field type="plone.registry.field.Int">
      <description>Time (in seconds) to cache the response in the caching proxy. Leave blank to use value from "Maximum age" field.</description>
      <required>False</required>
      <title>Shared maximum age</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.vary">
    <field type="plone.registry.field.ASCIILine">
      <description>Name(s) of HTTP headers that must match for the caching proxy to return a cached response</description>
      <required>False</required>
      <title>Vary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.weakCaching.anonOnly">
    <field type="plone.registry.field.Bool">
      <description>Ensure logging users always get a fresh page. Note that if you are caching pages in a proxy cache, you'll still need to use a Vary response header to keep anonymous and authenticated content separate.</description>
      <required>False</required>
      <title>Only cache for anonymous users</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.weakCaching.etags">
    <field type="plone.registry.field.Tuple">
      <description>A list of ETag component names to include</description>
      <required>False</required>
      <title>ETags</title>
      <value_type type="plone.registry.field.ASCIILine"/>
    </field>
    <value>
      <element>roles</element>
      <element>dokpool_apps</element>
      <element>lastModified</element>
      <element>dokpool_cachetime</element>
    </value>
  </record>
  <record name="plone.app.caching.weakCaching.lastModified">
    <field type="plone.registry.field.Bool">
      <description>Turn on Last-Modified headers</description>
      <required>False</required>
      <title>Last-modified validation</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.weakCaching.ramCache">
    <field type="plone.registry.field.Bool">
      <description>Turn on caching in Zope memory</description>
      <required>False</required>
      <title>RAM cache</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.caching.weakCaching.vary">
    <field type="plone.registry.field.ASCIILine">
      <description>Name(s) of HTTP headers that must match for the caching proxy to return a cached response</description>
      <required>False</required>
      <title>Vary</title>
    </field>
    <value/>
  </record>
  <record name="plone.cachepurging.interfaces.ICachePurgingSettings.cachingProxies" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="cachingProxies">
    <field type="plone.registry.field.Tuple">
      <description>Provide the URLs of each proxy to which PURGE requests shoudl be sent.</description>
      <title>Caching proxies</title>
      <value_type type="plone.registry.field.URI"/>
    </field>
    <value>
      <element>http://127.0.0.1:8100</element>
    </value>
  </record>
  <record name="plone.cachepurging.interfaces.ICachePurgingSettings.domains" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="domains">
    <field type="plone.registry.field.Tuple">
      <default/>
      <description>This option is only relevant if you are using virtual hosting and you have enabled the option to send PURGE requests with virtual hosting URLs above. If you your site is served on multiple domains e.g. http://example.org and http://www.example.org you may wish to purge both. If so, list all your domains here</description>
      <missing_value/>
      <required>False</required>
      <title>Domains</title>
      <value_type type="plone.registry.field.URI"/>
    </field>
    <value>
      <element>http://elan.your.org</element>
    </value>
  </record>
  <record name="plone.cachepurging.interfaces.ICachePurgingSettings.enabled" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description>If disabled, no purging will take place</description>
      <title>Enable purging</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.cachepurging.interfaces.ICachePurgingSettings.virtualHosting" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="virtualHosting">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description>This option is only relevant if you are using virtual hosting with Zope's VirtualHostMonster. This relies on special tokens (VirtualHostBase and VirtualHostRoot) in the URL to instruct Zope about the types of URLs that the user sees. If virtual host URLs are in use and this option is set, PURGE requests will be sent to the caching proxy with the virtual hosting tokens in place. This makes sense if there is a web server in front of your caching proxy performing the rewrites necessary to translate a user-facing URL into a virtual hosting URL, so that the requests the caching proxy sees have the rewrite information in them. Conversely, if the rewrite is done in or behind the caching proxy, you want to disable this option, so that the PURGE requests use URLs that match those seen by the caching proxy as they come from the client.</description>
      <title>Send PURGE requests with virtual hosting paths</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.caching.interfaces.ICacheSettings.enabled" interface="plone.caching.interfaces.ICacheSettings" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description>If not set, no caching operations will be attempted</description>
      <title>Globally enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.caching.interfaces.ICacheSettings.operationMapping" interface="plone.caching.interfaces.ICacheSettings" field="operationMapping">
    <field type="plone.registry.field.Dict">
      <description>Maps rule set names to operation names</description>
      <key_type type="plone.registry.field.DottedName">
        <title>Rule set name</title>
      </key_type>
      <title>Rule set/operation mapping</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Caching operation name</title>
      </value_type>
    </field>
    <value>
      <element key="plone.resource">plone.app.caching.strongCaching</element>
      <element key="plone.stableResource">plone.app.caching.strongCaching</element>
      <element key="plone.content.itemView">plone.app.caching.moderateCaching</element>
      <element key="plone.content.feed">plone.app.caching.weakCaching</element>
      <element key="plone.content.folderView">plone.app.caching.moderateCaching</element>
      <element key="plone.content.file">plone.app.caching.moderateCaching</element>
    </value>
  </record>
  <record name="plone.caching.operations.chain.operations">
    <field type="plone.registry.field.List">
      <description>A list of operations to call, in order</description>
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName"/>
    </field>
    <value/>
  </record>
</registry>