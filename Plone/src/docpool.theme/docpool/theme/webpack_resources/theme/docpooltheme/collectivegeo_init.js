(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["collectivegeo_init"],{

/***/ "./.plone/++resource++collective.geo.mapwidget/collectivegeo_init.js":
/*!***************************************************************************!*\
  !*** ./.plone/++resource++collective.geo.mapwidget/collectivegeo_init.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*global window, jQuery, document, OpenLayers, google*/\n/*\n\n  Documentation is accessibile to this address\n  - http://<plone_url>/++resource++collective.geo.mapwidget/docs.html\n\n*/\n\n(function ($) {\n    \"use strict\";\n\n    // = Collective Geo init =\n    //\n    // This script initialize collective.geo maps for each div\n    // with {{{widget-cgmap}}} class\n    //\n    // See [[#collectivegeo.js]] for details\n    //\n    //\n    // == Load maps ==\n    //\n    // After page has been loaded and the dom tree is fully instantiated\n    // collective.geo javascript initalizes maps for each\n    // {{{.widget-cgmap}}} div\n    //\n    // For each map you can customize some properties using data attributes\n    //\n    // * cgeolongitude\n    // * cgeolatitude\n    // * cgeozoom\n    // * cgeolang\n    //\n    // you can also pass some default parameter to c.geo plugin:\n    // For example.:\n    //\n    // {{{\n    // maps.collectivegeo({\n    //     center: new OpenLayers.LonLat('45.00', '7.3'),\n    //     zoom: 7,\n    //     lang: 'it'\n    // });\n    // }}}\n    //\n    //\n    // == Add layers to specific map ==\n    //\n    // You can add layers to a map using {{{add_layer}}} method\n    //\n    // {{{\n    // $('#mymap').collectivegeo(\n    //     'add_layer',\n    //     function () {\n    //         return new OpenLayers.Layer...(\n    //         ...layer code...\n    //         );\n    //     }\n    // );\n    // }}}\n    //\n    // or by {{{mapload}}} event\n    //\n    // {{{\n    // $(window).bind('mapload', function (evt, widget) {\n    //     widget.addLayers(\n    //         [\n    //             function () {\n    //                 return new OpenLayers.Layer...(\n    //                 ... layer code...\n    //             }\n    //         ],\n    //         'mymapid'\n    //     );\n    // }}}\n\n\n    $(window).bind(\"load\", function () {\n        // get all visible map and map-widgets\n        var maps = $('.widget-cgmap').filter(':visible'),\n            map_widgets = $('.map-widget .widget-cgmap').filter(':visible'),\n            geosetting_map = $('#geosettings-cgmap'),\n            fieldset = $(maps).parents('.formPanel'),\n            tabs;\n\n        // === Initialize Maps ==\n        //\n        // Initialize map for all div with class {{{widget-cgmap}}}\n        //\n        // Default settings are taken from data attributes\n        //\n        // * cgeolongitude\n        // * cgeolatitude\n        // * cgeozoom\n        // * cgeolang\n        maps.collectivegeo();\n\n        // === Map in hidden tabs ==\n        //\n        // When a map is displayed in a hidden tab or div\n        // it has to be refreshed when the tab is show.\n        //\n        // This trick works with jquerytools tabs in Plone forms\n        // and also with tabs generated by {{{enableFormTabbing}}} class:\n        // {{{\n        //\n        // <dl class=\"enableFormTabbing\">\n        //   ...\n        //   <dt id=\"fieldsetlegend-map\"><h2>My Map</h2></dt>\n        //   <dd id=\"fieldset-map\">\n        //     <div id=\"mymap\" class=\"widget-cgmap\"></div>\n        //   </dd>\n        //   ...\n        // </dl>\n        //\n        // }}}\n        // get hidden maps (maps with no size yet)\n        maps = $('.widget-cgmap').filter(':hidden');\n        if (maps.length > 0) {\n            tabs = $('.autotoc-nav,.autotoc-nav a, .formTabs, ul.formTabs');\n            tabs.bind(\"click\", function (e, index) {\n                var data = $(this).data('tabs');\n                var curpanel;\n                if (data){\n                    curpanel = $(this).data('tabs').getCurrentPane();\n                }\n                else{\n                    curpanel = $(this).parents('form').find('fieldset.active');\n                };\n                curpanel.find('.widget-cgmap').collectivegeo(); // refresh\n                curpanel.find('.map-widget .widget-cgmap').collectivegeo('add_edit_layer');\n                curpanel.find('.map-widget .widget-cgmap').collectivegeo('add_geocoder');\n            });\n        }\n\n\n        // === Collective.geo controlpanel ==\n        //\n        // Set marker edit layer and geocoder in\n        // collective.geo control panel.\n        //\n        // All maps with id {{{geosettings-cgmap}}}\n        geosetting_map.collectivegeo(\n            'add_markeredit_layer',\n            'form-widgets-longitude',\n            'form-widgets-latitude',\n            'form-widgets-zoom'\n        );\n        geosetting_map.collectivegeo('add_geocoder');\n\n        // === Collective.geo controlpanel ==\n        //\n        // Initialize maps for collective.z3cform.mapwidget\n        //\n        // Maps with edit bar are displayed in all div elements\n        // with class {{{map-widget}}}\n        map_widgets.collectivegeo('add_edit_layer');\n        map_widgets.collectivegeo('add_geocoder');\n    });\n\n}(jQuery));\n\n\n//# sourceURL=webpack:///./.plone/++resource++collective.geo.mapwidget/collectivegeo_init.js?");

/***/ })

}]);