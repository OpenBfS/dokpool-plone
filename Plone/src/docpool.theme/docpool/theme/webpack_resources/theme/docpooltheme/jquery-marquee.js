(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["jquery-marquee"],{

/***/ "./.plone/++theme++docpool.theme/static/jquery.marquee.js":
/*!****************************************************************!*\
  !*** ./.plone/++theme++docpool.theme/static/jquery.marquee.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * jQuery.marquee - scrolling text like old marquee element\n * @author Aamir Afridi - aamirafridi(at)gmail(dot)com / http://aamirafridi.com/jquery/jquery-marquee-plugin\n */;\n(function($) {\n    $.fn.marquee = function(options) {\n        return this.each(function() {\n            // Extend the options if any provided\n            var o = $.extend({}, $.fn.marquee.defaults, options),\n                $this = $(this),\n                $marqueeWrapper, containerWidth, animationCss, verticalDir, elWidth,\n                loopCount = 3,\n                playState = 'animation-play-state',\n                css3AnimationIsSupported = false,\n\n                //Private methods\n                _prefixedEvent = function(element, type, callback) {\n                    var pfx = [\"webkit\", \"moz\", \"MS\", \"o\", \"\"];\n                    for (var p = 0; p < pfx.length; p++) {\n                        if (!pfx[p]) type = type.toLowerCase();\n                        element.addEventListener(pfx[p] + type, callback, false);\n                    }\n                },\n\n                _objToString = function(obj) {\n                    var tabjson = [];\n                    for (var p in obj) {\n                        if (obj.hasOwnProperty(p)) {\n                            tabjson.push(p + ':' + obj[p]);\n                        }\n                    }\n                    tabjson.push();\n                    return '{' + tabjson.join(',') + '}';\n                },\n\n                _startAnimationWithDelay = function() {\n                    $this.timer = setTimeout(animate, o.delayBeforeStart);\n                },\n\n                //Public methods\n                methods = {\n                    pause: function() {\n                        if (css3AnimationIsSupported && o.allowCss3Support) {\n                            $marqueeWrapper.css(playState, 'paused');\n                        } else {\n                            //pause using pause plugin\n                            if ($.fn.pause) {\n                                $marqueeWrapper.pause();\n                            }\n                        }\n                        //save the status\n                        $this.data('runningStatus', 'paused');\n                        //fire event\n                        $this.trigger('paused');\n                    },\n\n                    resume: function() {\n                        //resume using css3\n                        if (css3AnimationIsSupported && o.allowCss3Support) {\n                            $marqueeWrapper.css(playState, 'running');\n                        } else {\n                            //resume using pause plugin\n                            if ($.fn.resume) {\n                                $marqueeWrapper.resume();\n                            }\n                        }\n                        //save the status\n                        $this.data('runningStatus', 'resumed');\n                        //fire event\n                        $this.trigger('resumed');\n                    },\n\n                    toggle: function() {\n                        methods[$this.data('runningStatus') == 'resumed' ? 'pause' : 'resume']();\n                    },\n\n                    destroy: function() {\n                        //Clear timer\n                        clearTimeout($this.timer);\n                        //Unbind all events\n                        $this.find(\"*\").andSelf().unbind();\n                        //Just unwrap the elements that has been added using this plugin\n                        $this.html($this.find('.js-marquee:first').html());\n                    }\n                };\n\n            //Check for methods\n            if (typeof options === 'string') {\n                if ($.isFunction(methods[options])) {\n                    //Following two IF statements to support public methods\n                    if (!$marqueeWrapper) {\n                        $marqueeWrapper = $this.find('.js-marquee-wrapper');\n                    }\n                    if ($this.data('css3AnimationIsSupported') === true) {\n                        css3AnimationIsSupported = true;\n                    }\n                    methods[options]();\n                }\n                return;\n            }\n\n            /* Check if element has data attributes. They have top priority\n               For details https://twitter.com/aamirafridi/status/403848044069679104 - Can't find a better solution :/\n               jQuery 1.3.2 doesn't support $.data().KEY hence writting the following */\n            var dataAttributes = {},\n            attr;\n            $.each(o, function(key, value) {\n                //Check if element has this data attribute\n                attr = $this.attr('data-' + key);\n                if (typeof attr !== 'undefined') {\n                    //Now check if value is boolean or not\n                    switch (attr) {\n                        case 'true':\n                            attr = true;\n                            break;\n                        case 'false':\n                            attr = false;\n                            break;\n                    }\n                    o[key] = attr;\n                }\n            });\n\n            //since speed option is changed to duration, to support speed for those who are already using it\n            o.duration = o.speed || o.duration;\n\n            //Shortcut to see if direction is upward or downward\n            verticalDir = o.direction == 'up' || o.direction == 'down';\n\n            //no gap if not duplicated\n            o.gap = o.duplicated ? parseInt(o.gap) : 0;\n\n            //wrap inner content into a div\n            $this.wrapInner('<div class=\"js-marquee\"></div>');\n\n            //Make copy of the element\n            var $el = $this.find('.js-marquee').css({\n                'margin-right': o.gap,\n                'float': 'left'\n            });\n\n            if (o.duplicated) {\n                $el.clone(true).appendTo($this);\n            }\n\n            //wrap both inner elements into one div\n            $this.wrapInner('<div style=\"width:100000px\" class=\"js-marquee-wrapper\"></div>');\n\n            //Save the reference of the wrapper\n            $marqueeWrapper = $this.find('.js-marquee-wrapper');\n\n            //If direction is up or down, get the height of main element\n            if (verticalDir) {\n                var containerHeight = $this.height();\n                $marqueeWrapper.removeAttr('style');\n                $this.height(containerHeight);\n\n                //Change the CSS for js-marquee element\n                $this.find('.js-marquee').css({\n                    'float': 'none',\n                    'margin-bottom': o.gap,\n                    'margin-right': 0\n                });\n\n                //Remove bottom margin from 2nd element if duplicated\n                if (o.duplicated) $this.find('.js-marquee:last').css({\n                    'margin-bottom': 0\n                });\n\n                var elHeight = $this.find('.js-marquee:first').height() + o.gap;\n\n                // adjust the animation speed according to the text length\n                // formula is to: (Height of the text node / Height of the main container) * speed;\n                o.duration = ((parseInt(elHeight, 10) + parseInt(containerHeight, 10)) / parseInt(containerHeight, 10)) * o.duration;\n\n            } else {\n                //Save the width of the each element so we can use it in animation\n                elWidth = $this.find('.js-marquee:first').width() + o.gap;\n\n                //container width\n                containerWidth = $this.width();\n\n                // adjust the animation speed according to the text length\n                // formula is to: (Width of the text node / Width of the main container) * speed;\n                o.duration = ((parseInt(elWidth, 10) + parseInt(containerWidth, 10)) / parseInt(containerWidth, 10)) * o.duration;\n            }\n\n            //if duplicated than reduce the speed\n            if (o.duplicated) {\n                o.duration = o.duration / 2;\n            }\n\n            if (o.allowCss3Support) {\n                var\n                elm = document.body || document.createElement('div'),\n                    animationName = 'marqueeAnimation-' + Math.floor(Math.random() * 10000000),\n                    domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\n                    animationString = 'animation',\n                    animationCss3Str = '',\n                    keyframeString = '';\n\n                //Check css3 support\n                if (elm.style.animation) {\n                    keyframeString = '@keyframes ' + animationName + ' ';\n                    css3AnimationIsSupported = true;\n                }\n\n                if (css3AnimationIsSupported === false) {\n                    for (var i = 0; i < domPrefixes.length; i++) {\n                        if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n                            var prefix = '-' + domPrefixes[i].toLowerCase() + '-';\n                            animationString = prefix + animationString;\n                            playState = prefix + playState;\n                            keyframeString = '@' + prefix + 'keyframes ' + animationName + ' ';\n                            css3AnimationIsSupported = true;\n                            break;\n                        }\n                    }\n                }\n\n                if (css3AnimationIsSupported) {\n                    animationCss3Str = animationName + ' ' + o.duration / 1000 + 's ' + o.delayBeforeStart / 1000 + 's infinite ' + o.css3easing;\n                    $this.data('css3AnimationIsSupported', true);\n                }\n            }\n\n            var _rePositionVertically = function() {\n                $marqueeWrapper.css('margin-top', o.direction == 'up' ? containerHeight + 'px' : '-' + elHeight + 'px');\n            },\n            _rePositionHorizontally = function() {\n                $marqueeWrapper.css('margin-left', o.direction == 'left' ? containerWidth + 'px' : '-' + elWidth + 'px');\n            };\n\n            //if duplicated option is set to true than position the wrapper\n            if (o.duplicated) {\n                if (verticalDir) {\n                    $marqueeWrapper.css('margin-top', o.direction == 'up' ? containerHeight + 'px' : '-' + ((elHeight * 2) - o.gap) + 'px');\n                } else {\n                    $marqueeWrapper.css('margin-left', o.direction == 'left' ? containerWidth + 'px' : '-' + ((elWidth * 2) - o.gap) + 'px');\n                }\n                loopCount = 1;\n            } else {\n                if (verticalDir) {\n                    _rePositionVertically();\n                } else {\n                    _rePositionHorizontally();\n                }\n            }\n\n            //Animate recursive method\n            var animate = function() {\n                if (o.duplicated) {\n                    //When duplicated, the first loop will be scroll longer so double the duration\n                    if (loopCount === 1) {\n                        o._originalDuration = o.duration;\n                        if (verticalDir) {\n                            o.duration = o.direction == 'up' ? o.duration + (containerHeight / ((elHeight) / o.duration)) : o.duration * 2;\n                        } else {\n                            o.duration = o.direction == 'left' ? o.duration + (containerWidth / ((elWidth) / o.duration)) : o.duration * 2;\n                        }\n                        //Adjust the css3 animation as well\n                        if (animationCss3Str) {\n                            animationCss3Str = animationName + ' ' + o.duration / 1000 + 's ' + o.delayBeforeStart / 1000 + 's ' + o.css3easing;\n                        }\n                        loopCount++;\n                    }\n                    //On 2nd loop things back to normal, normal duration for the rest of animations\n                    else if (loopCount === 2) {\n                        o.duration = o._originalDuration;\n                        //Adjust the css3 animation as well\n                        if (animationCss3Str) {\n                            animationName = animationName + '0';\n                            keyframeString = $.trim(keyframeString) + '0 ';\n                            animationCss3Str = animationName + ' ' + o.duration / 1000 + 's 0s infinite ' + o.css3easing;\n                        }\n                        loopCount++;\n                    }\n                }\n\n                if (verticalDir) {\n                    if (o.duplicated) {\n\n                        //Adjust the starting point of animation only when first loops finishes\n                        if (loopCount > 2) {\n                            $marqueeWrapper.css('margin-top', o.direction == 'up' ? 0 : '-' + elHeight + 'px');\n                        }\n\n                        animationCss = {\n                            'margin-top': o.direction == 'up' ? '-' + elHeight + 'px' : 0\n                        };\n                    } else {\n                        _rePositionVertically();\n                        animationCss = {\n                            'margin-top': o.direction == 'up' ? '-' + ($marqueeWrapper.height()) + 'px' : containerHeight + 'px'\n                        };\n                    }\n                } else {\n                    if (o.duplicated) {\n\n                        //Adjust the starting point of animation only when first loops finishes\n                        if (loopCount > 2) {\n                            $marqueeWrapper.css('margin-left', o.direction == 'left' ? 0 : '-' + elWidth + 'px');\n                        }\n\n                        animationCss = {\n                            'margin-left': o.direction == 'left' ? '-' + elWidth + 'px' : 0\n                        };\n\n                    } else {\n                        _rePositionHorizontally();\n                        animationCss = {\n                            'margin-left': o.direction == 'left' ? '-' + elWidth + 'px' : containerWidth + 'px'\n                        };\n                    }\n                }\n\n                //fire event\n                $this.trigger('beforeStarting');\n\n                //If css3 support is available than do it with css3, otherwise use jQuery as fallback\n                if (css3AnimationIsSupported) {\n                    //Add css3 animation to the element\n                    $marqueeWrapper.css(animationString, animationCss3Str);\n                    var keyframeCss = keyframeString + ' { 100%  ' + _objToString(animationCss) + '}',\n                        $styles = $('style');\n\n                    //Now add the keyframe animation to the head\n                    if ($styles.length !== 0) {\n                        //Bug fixed for jQuery 1.3.x - Instead of using .last(), use following\n                        $styles.filter(\":last\").append(keyframeCss);\n                    } else {\n                        $('head').append('<style>' + keyframeCss + '</style>');\n                    }\n\n                    //Animation iteration event\n                    _prefixedEvent($marqueeWrapper[0], \"AnimationIteration\", function() {\n                        $this.trigger('finished');\n                    });\n                    //Animation stopped\n                    _prefixedEvent($marqueeWrapper[0], \"AnimationEnd\", function() {\n                        animate();\n                        $this.trigger('finished');\n                    });\n\n                } else {\n                    //Start animating\n                    $marqueeWrapper.animate(animationCss, o.duration, o.easing, function() {\n                        //fire event\n                        $this.trigger('finished');\n                        //animate again\n                        if (o.pauseOnCycle) {\n                            _startAnimationWithDelay();\n                        } else {\n                            animate();\n                        }\n                    });\n                }\n                //save the status\n                $this.data('runningStatus', 'resumed');\n            };\n\n            //bind pause and resume events\n            $this.bind('pause', methods.pause);\n            $this.bind('resume', methods.resume);\n\n            if (o.pauseOnHover) {\n                $this.bind('mouseenter mouseleave', methods.toggle);\n            }\n\n            //If css3 animation is supported than call animate method at once\n            if (css3AnimationIsSupported && o.allowCss3Support) {\n                animate();\n            } else {\n                //Starts the recursive method\n                _startAnimationWithDelay();\n            }\n\n        });\n    }; //End of Plugin\n    // Public: plugin defaults options\n    $.fn.marquee.defaults = {\n        //If you wish to always animate using jQuery\n        allowCss3Support: true,\n        //works when allowCss3Support is set to true - for full list see http://www.w3.org/TR/2013/WD-css3-transitions-20131119/#transition-timing-function\n        css3easing: 'linear',\n        //requires jQuery easing plugin. Default is 'linear'\n        easing: 'linear',\n        //pause time before the next animation turn in milliseconds\n        delayBeforeStart: 1000,\n        //'left', 'right', 'up' or 'down'\n        direction: 'left',\n        //true or false - should the marquee be duplicated to show an effect of continues flow\n        duplicated: false,\n        //speed in milliseconds of the marquee in milliseconds\n        duration: 5000,\n        //gap in pixels between the tickers\n        gap: 20,\n        //on cycle pause the marquee\n        pauseOnCycle: false,\n        //on hover pause the marquee - using jQuery plugin https://github.com/tobia/Pause\n        pauseOnHover: false\n    };\n})(jQuery);\n\n\n//# sourceURL=webpack:///./.plone/++theme++docpool.theme/static/jquery.marquee.js?");

/***/ })

}]);