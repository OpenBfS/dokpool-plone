# Development environment buildout
# ================================

[buildout]
parts =
    instance
    zopepy
    zopeskel
    checkversions
    mkrelease
    pydev
    i18ndude
    i18nize_esd
    i18nize_policy
    i18nize_dbaccess
    i18nize_irix
    i18nize_docpoolbase
    plonesite

extends =
    packages.cfg



# Development Zope instance. Installs the ``bin/instance`` script
[instance]
recipe = plone.recipe.zope2instance
http-address = 8081
user = admin:istrator
verbose-security = on
eggs =
    ${eggs:main}
    ${eggs:devtools}
zcml =
    elan.esd
    ${zcml:main}
environment-vars =    
    zope_i18n_compile_mo_files true
    PLONE_CSRF_DISABLED false
zope-conf-additional = 
   
# Test runner. Run: ``bin/test`` to execute all tests
[test]
recipe = zc.recipe.testrunner
eggs = ${eggs:test}
defaults = ['--auto-color', '--auto-progress']

# Coverage report generator.
# Run: ``bin/test --coverage=coverage``
# and then: ``bin/coveragereport``
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')

# Installs the ``bin/zopepy`` interpreter.
[zopepy]
recipe = zc.recipe.egg
eggs = 
    ${eggs:main}
    ${eggs:devtools}
interpreter = zopepy

[i18ndude]
recipe = zc.recipe.egg
eggs = 
    ${eggs:admin}


[i18nize_esd]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_esd
mode = 775
dollar = $
domain = elan.esd
packagepath = ${buildout:directory}/src/elan.esd/elan/esd
languages = en de

[i18nize_policy]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_policy
mode = 775
dollar = $
domain = elan.policy
packagepath = ${buildout:directory}/src/elan.policy/elan/policy
languages = en de

[i18nize_dbaccess]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_dbaccess
mode = 775
dollar = $
domain = elan.dbaccess
packagepath = ${buildout:directory}/src/elan.dbaccess/elan/dbaccess
languages = en de

[i18nize_irix]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_irix
mode = 775
dollar = $
domain = elan.irix
packagepath = ${buildout:directory}/src/elan.irix/elan/irix
languages = en de

[i18nize_docpoolbase]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_docpoolbase
mode = 775
dollar = $
domain = docpool.base
packagepath = ${buildout:directory}/src/docpool.base/docpool/base
languages = en de

# Installs ZopeSkel, which can be used to create new packages
# Run: ``bin/zopeskel``
[zopeskel]
recipe = zc.recipe.egg
eggs = ZopeSkel
dependent-scripts = true

# Tool to help check for new versions.
# Run: ``bin/checkversions versions.cfg``
[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

# Tool to make releases
# Run: ``bin/mkrelease --help``
[mkrelease]
recipe = zc.recipe.egg
eggs = jarn.mkrelease

[pydev]
recipe = pb.recipes.pydev
pydevproject_path = ${buildout:directory}/.pydevproject
eggs = ${instance:eggs}
extra_paths = 

[plonesite]
recipe = collective.recipe.plonesite
site-id = ELAN
instance = instance
profiles-initial =
    Products.CMFPlone:plone-content
profiles =
    elan.policy:default
post-extras =
    ${buildout:directory}/run_createTestData.py
enabled = false
