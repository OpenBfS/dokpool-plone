# Development environment buildout
# ================================

[buildout]
parts =
    instance
    zopepy
    checkversions
    mkrelease
    plonebackup
    repozo
    i18ndude
    i18nize_esd
    i18nize_sitrep
    i18nize_docpoolbase
    i18nize_docpoolelan
    i18nize_docpoolconfig
    i18nize_docpoolrodos
    i18nize_docpoolrei
    i18nize_docpooldoksys
    i18nize_docpooltheme
    mrbob
    test

extends =
    packages.cfg



# Development Zope instance. Installs the ``bin/instance`` script
[instance]
recipe = plone.recipe.zope2instance
http-address = ${ports:instance_dev}
user = ${users:zope-admin}:${passwords:zope-dev-admin}
verbose-security = on
eggs =
    ${eggs:main}
    ${eggs:devtools}
zcml =
    ${zcml:main}
environment-vars =
    zope_i18n_compile_mo_files true
    PTS_LANGUAGES de
    zope_i18n_allowed_languages de
    PLONE_CSRF_DISABLED false
    ELANENGINE ${database:engine}
zope-conf-additional =

# Test runner. Run: ``bin/test`` to execute all tests
[test]
recipe = zc.recipe.testrunner
eggs =
    ${eggs:test}
    pdbpp
defaults = ['--auto-color', '--auto-progress', '-vvv']

# Coverage report generator.
# Run: ``bin/test --coverage=coverage``
# and then: ``bin/coveragereport``
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')

# Installs the ``bin/zopepy`` interpreter.
[zopepy]
recipe = zc.recipe.egg
eggs =
    ${eggs:main}
    ${eggs:devtools}
interpreter = zopepy

[i18ndude]
recipe = zc.recipe.egg
eggs =
    ${eggs:admin}


[i18nize_esd]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_esd
mode = 775
dollar = $
domain = elan.esd
packagepath = ${buildout:directory}/src/elan.esd/elan/esd
languages = en de

[i18nize_sitrep]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_sitrep
mode = 775
dollar = $
domain = elan.sitrep
packagepath = ${buildout:directory}/src/elan.sitrep/elan/sitrep
languages = en de

[i18nize_docpoolbase]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_docpoolbase
mode = 775
dollar = $
domain = docpool.base
packagepath = ${buildout:directory}/src/docpool.base/docpool/base
languages = en de

[i18nize_docpoolelan]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_docpoolelan
mode = 775
dollar = $
domain = docpool.elan
packagepath = ${buildout:directory}/src/docpool.elan/docpool/elan
languages = en de

[i18nize_docpoolconfig]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_docpoolconfig
mode = 775
dollar = $
domain = docpool.config
packagepath = ${buildout:directory}/src/docpool.config/docpool/config
languages = en de

[i18nize_docpoolrodos]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_docpoolrodos
mode = 775
dollar = $
domain = docpool.rodos
packagepath = ${buildout:directory}/src/docpool.rodos/docpool/rodos
languages = en de

[i18nize_docpoolrei]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_docpoolrei
mode = 775
dollar = $
domain = docpool.rei
packagepath = ${buildout:directory}/src/docpool.rei/docpool/rei
languages = en de

[i18nize_docpooldoksys]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_docpooldoksys
mode = 775
dollar = $
domain = docpool.doksys
packagepath = ${buildout:directory}/src/docpool.doksys/src/docpool/doksys
languages = en de

[i18nize_docpooltheme]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/i18nize.in
output = ${buildout:bin-directory}/i18nize_docpooltheme
mode = 775
dollar = $
domain = docpool.theme
packagepath = ${buildout:directory}/src/docpool.theme/docpool/theme
languages = en de

# Tool to help check for new versions.
# Run: ``bin/checkversions versions.cfg``
[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

# Tool to make releases
# Run: ``bin/mkrelease --help``
[mkrelease]
recipe = zc.recipe.egg
eggs = jarn.mkrelease

[plonebackup]
recipe = collective.recipe.backup
use_rsync = False
keep = 5
backup_blobs = True
blob_storage = ${buildout:directory}/var/blobstorage
pre_command = echo 'Starting ELAN-Backup!'
post_command = echo 'ELAN-Backup done!'

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[mrbob]
recipe = zc.recipe.egg
eggs =
    mr.bob
    bobtemplates.plone

[coverage]
recipe = zc.recipe.egg
eggs = coverage
