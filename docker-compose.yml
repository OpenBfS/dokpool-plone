---
version: "3.8"
name: dokpool

services:
  dokpool-loadbalancer:
    # Use the latest Traefik image
    image: traefik
    profiles:
      - dokpool_review

    labels:
      - traefik.enable=true
      - traefik.constraint-label=public

      # GENERIC MIDDLEWARES
      # - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      # - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.middlewares.gzip.compress=true
      - traefik.http.middlewares.gzip.compress.excludedcontenttypes=image/png, image/jpeg, font/woff2

      # GENERIC ROUTERS
      # - traefik.http.routers.generic-https-redirect.entrypoints=http
      # - traefik.http.routers.generic-https-redirect.rule=HostRegexp(`{host:.*}`)
      # - traefik.http.routers.generic-https-redirect.priority=1
      # - traefik.http.routers.generic-https-redirect.middlewares=https-redirect

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

    command:
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `public`)
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      # - --entrypoints.https.address=:443
      - --accesslog
      - --accesslog.format=json
      - --accesslog.fields.headers.names.X-Varnish-Routed=keep
      - --accesslog.fields.headers.names.RequestHost=keep
      - --log
      - --log.level=DEBUG
      - --api

  dokpool-zeoclient:
    profiles:
      - dokpool_review
    image: git.starzel.de:5050/bfs/dokpool:python3
    deploy:
      mode: replicated
      replicas: 2
    environment:
      LISTEN_PORT: 8081
      RELSTORAGE_DSN: "dbname='plone' user='plone' host='dokpool-postgres' password='plone'"
      RELSTORAGE_CREATE_SCHEMA: false
    labels:
        - traefik.enable=true
        - traefik.constraint-label=public
        ## Virtual Host Monster
        - traefik.http.middlewares.dokpool-public.addprefix.prefix=/VirtualHostBase/https/plone.localhost/Plone/VirtualHostRoot
        # Service
        - traefik.http.services.dokpool-varnish.loadbalancer.server.port=8081
        # Middleware
        # Router: Varnish Public
        - traefik.http.routers.dokpool-public.rule=Host(`plone.localhost`)
        - traefik.http.routers.dokpool-public.entrypoints=http
        - traefik.http.routers.dokpool-public.service=dokpool-varnish
        - traefik.http.routers.dokpool-public.middlewares=gzip

  dokpool-zeoclient-init:
    profiles:
      - dokpool_init
    image: git.starzel.de:5050/bfs/dokpool:python3
    ports:
      - 8082:8082
    environment:
      LISTEN_PORT: 8082
      RELSTORAGE_DSN: "dbname='plone' user='plone' host='dokpool-postgres' password='plone'"

  # Only for development & test
  # On production, we use the central patroni postgres
  dokpool-postgres:
    profiles:
      - dokpool_review
      - dokpool_init
    image: postgres
    environment:
      POSTGRES_USER: plone
      POSTGRES_PASSWORD: plone
      POSTGRES_DB: plone
    ports:
      - "5432:5432"

  dokpool-purger:
    profiles:
      - dokpool_review
    image: ghcr.io/kitconcept/cluster-purger:latest
    environment:
      PURGER_SERVICE_NAME: varnish
      PURGER_SERVICE_PORT: 80
      PURGER_MODE: "compose"
      PURGER_PUBLIC_SITES: "['plone.localhost']"

  dokpool-varnish:
    profiles:
      - dokpool_review
    image: varnish
    volumes:
      - ./devops/varnish.vcl:/etc/varnish/default.vcl:ro

    labels:
      - traefik.enable=true
      - traefik.constraint-label=public
      # SERVICE
      - traefik.http.services.dokpool-varnish.loadbalancer.server.port=8081
    networks:
      default:
        aliases:
          - plone.localhost
    depends_on:
      - dokpool-loadbalancer
      - dokpool-zeoclient
    ports:
      - "80:80"

