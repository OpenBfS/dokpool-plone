---
version: "3.8"
name: dokpool

services:
  dokpool-zeoclient-init:
    profiles:
      - init
    image: git.starzel.de:5050/bfs/dokpool:python3
    command: "create-site"
    environment:
      RELSTORAGE_DSN: "dbname='plone' user='plone' host='dokpool-postgres' password='plone'"
      RELSTORAGE_CREATE_SCHEMA: "true"
      DELETE_EXISTING: "1"
    depends_on:
      dokpool-postgres:
        condition: service_started

  dokpool-zeoclient:
    profiles:
      - run
    image: git.starzel.de:5050/bfs/dokpool:python3
    deploy:
      mode: replicated
      replicas: 2
    environment:
      RELSTORAGE_DSN: "dbname='plone' user='plone' host='dokpool-postgres' password='plone'"
      RELSTORAGE_CREATE_SCHEMA: "false"
    depends_on:
      dokpool-postgres:
        condition: service_started

  # Only for development & test
  # On production, we use the central patroni postgres
  dokpool-postgres:
    profiles:
      - init
      - run
    image: postgres
    volumes:
      - dokpool-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: plone
      POSTGRES_PASSWORD: plone
      POSTGRES_DB: plone
    ports:
      - "5432:5432"

  # Do we even need this? Service port isn't implemented currently so it wouldn't start up rootless anyway.
  #   dokpool-purger:
  #     profiles:
  #       - dokpool_review
  #     image: ghcr.io/kitconcept/cluster-purger:latest
  #     environment:
  #       PURGER_SERVICE_NAME: dokpool-varnish
  #       PURGER_SERVICE_PORT: 8080
  #       PURGER_MODE: "compose"
  #       PURGER_PUBLIC_SITES: "['plone.localhost']"

  dokpool-varnish:
    profiles:
      - run
    image: varnish
    volumes:
      - ./devops/varnish.vcl:/etc/varnish/default.vcl:ro

    environment:
      VARNISH_HTTP_PORT: 8080

    networks:
      default:
        aliases:
          - plone.localhost
    depends_on:
      dokpool-zeoclient:
        condition: service_healthy
    ports:
      - "8080:8080"

volumes:
  dokpool-db:
    external: false
